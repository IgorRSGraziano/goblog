definitions:
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  services.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
info:
  contact: {}
paths:
  /user/login:
    post:
      consumes:
      - application/json
      description: User authentication, to get a token
      parameters:
      - description: User login payload
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/services.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              ' user':
                $ref: '#/definitions/models.User'
              token:
                type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: User login
      tags:
      - User
securityDefinitions:
  JWT:
    in: header
    name: token
    type: apiKey
swagger: "2.0"
